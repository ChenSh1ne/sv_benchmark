reshape(mcols(exomeTargets), v.names="coverage", direction="narrow")
reshape(mcols(exomeTargets), v.names="coverage", direction="narrow")
reshape(mcols(exomeTargets), v.names="coverage", direction="long")
reshape(mcols(exomeTargets), varying="coverage", direction="long")
summary(Indometh)
wide <- reshape(Indometh, v.names = "conc", idvar = "Subject",
timevar = "time", direction = "wide")
wide
reshape(wide, direction = "long")
reshape(wide, idvar = "Subject", varying = list(2:12),
v.names = "conc", direction = "long")
Indometh
head(Indometh)
reshape(mcols(exomeTargets), direction="long")
reshapeWide(wide)
wide@reshapeWide
attr(wide,reshapeWide)
attr
attr(wide)
attr(wide, "reshapeWide")
head(wide)
head(mcols(exomeTargets))
head(Indometh)
reshape(as.data.frame(mcols(exomeTargets)), v.names="coverage", timevar="sample", direction="long")
colnames(mcols(exomeTargets))
?grepl
grepl("coverage.", colnames(mcols(exomeTargets))
)
grepl("coverage.", colnames(mcols(exomeTargets))
)
colnames(mcols(exomeTargets))[grepl("coverage.", colnames(mcols(exomeTargets))]
colnames(mcols(exomeTargets))[grepl("coverage.", colnames(mcols(exomeTargets))]
colnames(mcols(exomeTargets))[grepl("coverage.", colnames(mcols(exomeTargets)))]
reshape(as.data.frame(mcols(exomeTargets)), varying=colnames(mcols(exomeTargets))[grepl("coverage.", colnames(mcols(exomeTargets)))], v.names="coverage", timevar="sample", direction="long")
head(reshape(as.data.frame(mcols(exomeTargets)), varying=colnames(mcols(exomeTargets))[grepl("coverage.", colnames(mcols(exomeTargets)))], v.names="coverage", timevar="sample", direction="long"))
reshape(wide, idvar = "Subject", varying = list(2:12),
v.names = "conc", direction = "long")
head(reshape(wide, idvar = "Subject", varying = list(2:12),
v.names = "conc", direction = "long"))
head(wide)
reshape(as.data.frame(mcols(exomeTargets)), varying=colnames(mcols(exomeTargets))[grepl("coverage.", colnames(mcols(exomeTargets)))], v.names="sample", timevar="sample", direction="long")
head(reshape(as.data.frame(mcols(exomeTargets)), varying=colnames(mcols(exomeTargets))[grepl("coverage.", colnames(mcols(exomeTargets)))], v.names="sample", timevar="sample", direction="long"))
reshape(as.data.frame(mcols(exomeTargets)), varying=colnames(mcols(exomeTargets))[grepl("coverage.", colnames(mcols(exomeTargets)))], v.names="x", timevar="y", direction="long")
head(reshape(as.data.frame(mcols(exomeTargets)), varying=colnames(mcols(exomeTargets))[grepl("coverage.", colnames(mcols(exomeTargets)))], v.names="x", timevar="y", direction="long"))
zz$sample <- colnames(mcols(exomeTargets))[grepl("coverage.", colnames(mcols(exomeTargets)))][zz$index]
zz <- reshape(as.data.frame(mcols(exomeTargets)), varying=colnames(mcols(exomeTargets))[grepl("coverage.", colnames(mcols(exomeTargets)))], v.names="count", timevar="index", direction="long")
zz$sample <- colnames(mcols(exomeTargets))[grepl("coverage.", colnames(mcols(exomeTargets)))][zz$index]
View(zz)
head(reshape(wide, direction = "long"))
attr(wide, "reshapeWide")
reshape(as.data.frame(mcols(exomeTargets)),
varying=colnames(mcols(exomeTargets))[grepl("coverage.", colnames(mcols(exomeTargets)))],
v.names="count",
timevar="sample",
times=str_replace(colnames(mcols(exomeTargets))[grepl("coverage.", colnames(mcols(exomeTargets)))], "coverage.", ""),
direction="long")
head(zz)
str_replace(colnames(mcols(exomeTargets))[grepl("coverage.", colnames(mcols(exomeTargets)))], "coverage.", "")
unique(zz)
str_replace(colnames(mcols(exomeTargets))[grepl("coverage.", colnames(mcols(exomeTargets)))], "coverage.", "")
reshape(as.data.frame(mcols(exomeTargets)),
varying=colnames(mcols(exomeTargets))[grepl("coverage.", colnames(mcols(exomeTargets)))],
v.names="count",
timevar="sample",
times=1:7,
#times=str_replace(colnames(mcols(exomeTargets))[grepl("coverage.", colnames(mcols(exomeTargets)))], "coverage.", ""),
direction="long")
colnames(mcols(exomeTargets))[grepl("coverage.", colnames(mcols(exomeTargets)))],
colnames(mcols(exomeTargets))[grepl("coverage.", colnames(mcols(exomeTargets)))]
reshape(as.data.frame(mcols(exomeTargets)),
varying=colnames(mcols(exomeTargets))[grepl("coverage.", colnames(mcols(exomeTargets)))],
v.names="count",
timevar="sample",
times=1:8,
#times=str_replace(colnames(mcols(exomeTargets))[grepl("coverage.", colnames(mcols(exomeTargets)))], "coverage.", ""),
direction="long")
zz <- reshape(as.data.frame(mcols(exomeTargets)),
varying=colnames(mcols(exomeTargets))[grepl("coverage.", colnames(mcols(exomeTargets)))],
v.names="count",
timevar="sample",
times=1:8,
#times=str_replace(colnames(mcols(exomeTargets))[grepl("coverage.", colnames(mcols(exomeTargets)))], "coverage.", ""),
direction="long")
head(zz)
unique(zz$sample)
unique(zz$id)
unique(zz$sample)
colnames(mcols(exomeTargets))[grepl("coverage.", colnames(mcols(exomeTargets)))][zz$sample]
unique(colnames(mcols(exomeTargets))[grepl("coverage.", colnames(mcols(exomeTargets)))][zz$sample])
zz$sample <- colnames(mcols(exomeTargets))[grepl("coverage.", colnames(mcols(exomeTargets)))][zz$sample]
zz$sample
count(zz$sample)
zz <- reshape(as.data.frame(mcols(exomeTargets)),
varying=colnames(mcols(exomeTargets))[grepl("coverage.", colnames(mcols(exomeTargets)))],
v.names="count",
timevar="sample",
#times=1:8,
#times=str_replace(colnames(mcols(exomeTargets))[grepl("coverage.", colnames(mcols(exomeTargets)))], "coverage.", ""),
direction="long")
head(zz)
str_replace(colnames(mcols(exomeTargets))[grepl("coverage.", colnames(mcols(exomeTargets)))], "coverage.", "")
zz <- reshape(as.data.frame(mcols(exomeTargets)),
varying=colnames(mcols(exomeTargets))[grepl("coverage.", colnames(mcols(exomeTargets)))],
v.names="count",
timevar="sample",
times=str_replace(colnames(mcols(exomeTargets))[grepl("coverage.", colnames(mcols(exomeTargets)))], "coverage.", ""),
direction="long")
head(zz)
unqiue(sample)
unique(sample)
unique(zz$sample)
targetGcCounts
targetGcCounts <- reshape(as.data.frame(mcols(exomeTargets)),
varying=colnames(mcols(exomeTargets))[grepl("coverage.", colnames(mcols(exomeTargets)))],
v.names="count",
timevar="sample",
times=str_replace(colnames(mcols(exomeTargets))[grepl("coverage.", colnames(mcols(exomeTargets)))], "coverage.", ""),
direction="long")
targetGcCounts$sample <- colnames(mcols(exomeTargets))[grepl("coverage.", colnames(mcols(exomeTargets)))][targetGcCounts$sample]
View(targetGcCounts)
targetGcCounts <- reshape(as.data.frame(mcols(exomeTargets)),
varying=colnames(mcols(exomeTargets))[grepl("coverage.", colnames(mcols(exomeTargets)))],
v.names="count",
timevar="sample",
times=str_replace(colnames(mcols(exomeTargets))[grepl("coverage.", colnames(mcols(exomeTargets)))], "coverage.", ""),
direction="long")
head(targetGcCounts)
unique(targetGcCounts$sample)
exomeTargets
targetGcCounts <- reshape(as.data.frame(mcols(exomeTargets), width=width(exomeTargets)),
varying=colnames(mcols(exomeTargets))[grepl("coverage.", colnames(mcols(exomeTargets)))],
v.names="count",
timevar="sample",
times=str_replace(colnames(mcols(exomeTargets))[grepl("coverage.", colnames(mcols(exomeTargets)))], "coverage.", ""),
direction="long")
data.frame(mcols(exomeTargets), width=width(exomeTargets)
)
head(data.frame(mcols(exomeTargets), width=width(exomeTargets)))
targetGcCounts <- reshape(data.frame(mcols(exomeTargets), width=width(exomeTargets)),
varying=colnames(mcols(exomeTargets))[grepl("coverage.", colnames(mcols(exomeTargets)))],
v.names="count",
timevar="sample",
times=str_replace(colnames(mcols(exomeTargets))[grepl("coverage.", colnames(mcols(exomeTargets)))], "coverage.", ""),
direction="long")
head(targetGcCounts)
targetGcCounts <- reshape(data.frame(mcols(exomeTargets), width=width(exomeTargets)),
varying=colnames(mcols(exomeTargets))[grepl("coverage.", colnames(mcols(exomeTargets)))],
v.names="count",
timevar="sample",
times=str_replace(colnames(mcols(exomeTargets))[grepl("coverage.", colnames(mcols(exomeTargets)))], "coverage.", ""),
direction="long")
head(targetGcCounts)
ggplot(targetGcCounts, aes(x=gc, y=count/width)) +
geom_point() +
labs(title="Exome target mapping rate by target GC content")
library(stringr)
library(igraph)
library(ggplot2)
library(gridExtra)
library(plyr)
library(data.table)
library(reshape)
#source("http://bioconductor.org/biocLite.R")
#biocLite("VariantAnnotation")
#biocLite("BSgenome.Hsapiens.UCSC.hg19")
#biocLite("rfPred")
#biocLite("Rsamtools")
#biocLite("ShortRead")
#biocLite("Biostrings")
library(Rsamtools)
library(rtracklayer)
library(VariantAnnotation)
library(Biostrings)
library(rfPred)
library(BSgenome.Hsapiens.UCSC.hg19)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(org.Hs.eg.db)
ggplot(targetGcCounts, aes(x=gc, y=count/width)) +
geom_point() +
labs(title="Exome target mapping rate by target GC content")
library(ggplot2)
install.package(ggplot2)
library(stringr)
library(plyr)
library(data.table)
library(reshape)
library(ShortRead)
library(Rsamtools)
library(rtracklayer)
library(VariantAnnotation)
library(BSgenome.Hsapiens.UCSC.hg19)
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
library(rfPred)
?getSeq
getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr1:1000000-1001000")
getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr1", 1000000, 1001000)
getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr1", 1000001, 1001000)
as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr1", 1000001, 1001000))
write(as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr1", 1000001, 1001000)), "c:/dev/human1k.fa")
write(paste0(">read1", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr1", 1000001, 1001000))), "c:/dev/human1k.fa")
write(paste0(">read1", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr1", 1000001, 1001000))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">read1\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr1", 1000001, 1001000))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr1:1000001-1001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr1",1000001, 1001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr2:1000001-1001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr2",1000001, 1001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr3:1000001-1001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr3",1000001, 1001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr4:1000001-1001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr4",1000001, 1001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr5:1000001-1001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr5",1000001, 1001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr6:1000001-1001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr6",1000001, 1001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr7:1000001-1001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr7",1000001, 1001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr8:1000001-1001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr8",1000001, 1001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr9:1000001-1001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr9",1000001, 1001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr10:1000001-1001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr10",1000001, 1001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr11:1000001-1001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr11",1000001, 1001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr12:1000001-1001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr12",1000001, 1001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr13:1000001-1001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr13",1000001, 1001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr14:1000001-1001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr14",1000001, 1001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr15:1000001-1001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr15",1000001, 1001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr16:1000001-1001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr16",1000001, 1001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr17:1000001-1001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr17",1000001, 1001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr18:1000001-1001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr18",1000001, 1001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr19:1000001-1001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr19",1000001, 1001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr20:1000001-1001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr20",1000001, 1001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr21:1000001-1001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr21",1000001, 1001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr22:1000001-1001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr22",1000001, 1001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr1:2000001-2001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr1",2000001, 2001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr2:2000001-2001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr2",2000001, 2001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr3:2000001-2001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr3",2000001, 2001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr4:2000001-2001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr4",2000001, 2001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr5:2000001-2001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr5",2000001, 2001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr6:2000001-2001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr6",2000001, 2001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr7:2000001-2001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr7",2000001, 2001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr8:2000001-2001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr8",2000001, 2001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr9:2000001-2001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr9",2000001, 2001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr10:2000001-2001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr10",2000001, 2001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr11:2000001-2001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr11",2000001, 2001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr12:2000001-2001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr12",2000001, 2001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr13:2000001-2001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr13",2000001, 2001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr14:2000001-2001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr14",2000001, 2001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr15:2000001-2001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr15",2000001, 2001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr16:2000001-2001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr16",2000001, 2001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr17:2000001-2001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr17",2000001, 2001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr18:2000001-2001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr18",2000001, 2001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr19:2000001-2001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr19",2000001, 2001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr20:2000001-2001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr20",2000001, 2001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr21:2000001-2001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr21",2000001, 2001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr22:2000001-2001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr22",2000001, 2001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr1:3000001-3001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr1",3000001, 3001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr2:3000001-3001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr2",3000001, 3001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr3:3000001-3001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr3",3000001, 3001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr4:3000001-3001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr4",3000001, 3001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr5:3000001-3001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr5",3000001, 3001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr6:3000001-3001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr6",3000001, 3001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr7:3000001-3001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr7",3000001, 3001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr8:3000001-3001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr8",3000001, 3001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr9:3000001-3001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr9",3000001, 3001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr10:3000001-3001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr10",3000001, 3001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr11:3000001-3001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr11",3000001, 3001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr12:3000001-3001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr12",3000001, 3001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr13:3000001-3001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr13",3000001, 3001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr14:3000001-3001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr14",3000001, 3001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr15:3000001-3001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr15",3000001, 3001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr16:3000001-3001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr16",3000001, 3001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr17:3000001-3001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr17",3000001, 3001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr18:3000001-3001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr18",3000001, 3001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr19:3000001-3001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr19",3000001, 3001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr20:3000001-3001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr20",3000001, 3001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr21:3000001-3001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr21",3000001, 3001001))), "c:/dev/human1k.fa", append=TRUE)
write(paste0(">chr22:3000001-3001001\n", as.character(getSeq(BSgenome.Hsapiens.UCSC.hg19, "chr22",3000001, 3001001))), "c:/dev/human1k.fa", append=TRUE)
int1 <- c(1L,2L,3L,5L,2L,8L)
int2 <- c(15L,45L,20L,1L,15L,100L,80L,5L)
collection <- IntegerList(int1, int2)
library(GenomicRanges)
int1 <- c(1L,2L,3L,5L,2L,8L)
int2 <- c(15L,45L,20L,1L,15L,100L,80L,5L)
collection <- IntegerList(int1, int2)
## names
names(collection) <- c("one", "two")
names(collection)
names(collection) <- NULL # clear names
names(collection)
names(collection) <- "one"
names(collection) # c("one", NA)
## extraction
collection[[1]] # range1
collection[["1"]] # NULL, does not exist
collection[["one"]] # range1
collection[[NA_integer_]] # NULL
## subsetting
collection[numeric()] # empty
collection[NULL] # empty
collection[] # identity
collection[c(TRUE, FALSE)] # first element
collection[2] # second element
collection[c(2,1)] # reversed
collection[-1] # drop first
collection$one
## replacement
collection$one <- int2
collection[[2]] <- int1
## combining
col1 <- IntegerList(one = int1, int2)
col2 <- IntegerList(two = int2, one = int1)
col3 <- IntegerList(int2)
append(col1, col2)
append(col1, col2, 0)
col123 <- c(col1, col2, col3)
col123
## revElements
revElements(col123)
revElements(col123, 4:5)
## group generics
2 * col1
col1 + col1
col1 > 2
sum(col1)  # equivalent to (but faster than) 'sapply(col1, sum)'
mean(col1)  # equivalent to 'sapply(col1, mean)'
library(VariantAnnotation)
source("libgridss.R")
file <- "C:\\dev\\dream\\PCSI0072-novo.vcf"
vcf <- readVcf(file, "hg19_random")
library(VariantAnnotation)
install.packages("RSQLite")
library(VariantAnnotation)
source("http://bioconductor.org/biocLite.R")
biocLite("VariantAnnotation")
library(VariantAnnotation)
library(VariantAnnotation)
biocLite("BiocUpgrade")
source("http://bioconductor.org/biocLite.R")
biocLite("BiocUpgrade")
library(VariantAnnotation)
f <- file("test.vcf")
writeLines(c(
"#CHROM  POS	ID	REF	ALT	QUAL	FILTER	INFO",
"chr1  1	variant1	A	[chr1:1[a	1	.	ATTR=value",
"chr2  2  variant2	A	[chr2:2[a	2	.	ATTR=value"
), f)
close(f)
vcf <- readVcf("test.vcf")
vcf <- readVcf("test.vcf", "hg19")
vcf <- readVcf("test.vcf", "hg19")
vcf <- readVcf("test.vcf", "hg19")
f <- file("test.vcf")
writeLines(c(
"#CHROM  POS	ID	REF	ALT	QUAL	FILTER	INFO",
"chr1  1	variant1	A	[chr1:1[a	1	.	ATTR=value",
"chr2  2  variant2	A	[chr2:2[a	2	.	ATTR=value"
), f)
close(f)
getwd()
f <- file("test.vcf")
writeLines(c(
"#CHROM  POS	ID	REF	ALT	QUAL	FILTER	INFO",
"chr1	1	variant1	A	[chr1:1[a	1	.	ATTR=value",
"chr2	2	variant2	A	[chr2:2[a	2	.	ATTR=value"
), f)
close(f)
f <- file("test.vcf")
writeLines(c(
"#CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO",
"chr1\t1\tvariant1\tA\t[chr1:1[a\t1\t.\tATTR=value",
"chr2\t2\tvariant2\tA\t[chr2:2[a\t2\t.\tATTR=value"
), f)
close(f)
vcf <- readVcf("test.vcf", "hg19")
info(vcf)
fixed(vcf)
fixed(vcf)$QUAL==1
writeVcf(vcf, "working.vcf")
writeVcf(vcf[fixed(vcf)$QUAL==1,], "notworking.vcf")
vcf[fixed(vcf)$QUAL==1,]
info(vcf[fixed(vcf)$QUAL==1,])
fixed(vcf[fixed(vcf)$QUAL==1,])
source("http://bioconductor.org/biocLite.R")
biocLite("VariantAnnotation")
source("http://bioconductor.org/biocLite.R")
biocLite("VariantAnnotation")
getwd()
library(VariantAnnotation)
f <- file("test.vcf")
writeLines(c(
"#CHROM\tPOS\tID\tREF\tALT\tQUAL\tFILTER\tINFO",
"chr1\t1\tvariant1\tA\t[chr1:1[a\t1\t.\tATTR=value",
"chr2\t2\tvariant2\tA\t[chr2:2[a\t2\t.\tATTR=value"
), f)
close(f)
vcf <- readVcf("test.vcf", "hg19")
writeVcf(vcf, "test-unchanged-expect-2-records.vcf")
writeVcf(vcf[fixed(vcf)$QUAL==1,], "test-subset-expect-1-record.vcf")
x <- Rle(101:105, 6:2)
i <- IRanges(6:10, 16:12, names=letters[1:5])
extractList(x, i)
library(VariantAnnotation)
x <- Rle(101:105, 6:2)
i <- IRanges(6:10, 16:12, names=letters[1:5])
extractList(x, i)
i
x
df <- DataFrame(X=x, Y=LETTERS[1:20])
extractList(df, i)
df
extractList(df, i)
read.csv("W:/assemblyloc.txt")
dt <- read.csv("W:/assemblyloc.txt")
library(ggplot2)
View(dt)
ggplot(dt, aes(x=X252)) + geom_density()
ggplot(dt, aes(x=X252)) + geom_histogram()
update.packages(checkBuilt=TRUE, ask=FALSE)
source("http://bioconductor.org/biocLite.R")
biocLite()
remove.packages("BiocInstaller")
source("http://bioconductor.org/biocLite.R")
biocLite("cn.mops")
?sn.mops
?cn.mops
browseVignettes("cn.mops")
?getReadCountsFromBAM
library(cn.mops)
?getReadCountsFromBAM
bamCounts <- getReadCountsFromBAM(
BAMFiles=c("W:/projects/lung_cancer/align/bowtie2/H5LNMCCXX_5_150505_FR07886866_Human__R_150501_ALEDOB_FGS_M001.markdup.bam", "H5LNMCCXX_6_150505_FR07886867_Human__R_150501_ALEDOB_FGS_M001.markdup.bam"),
sampleNames=c("H5LNMCCXX_5", "H5LNMCCXX_6"),
mode="paired",
parallel=3)
bamCounts <- getReadCountsFromBAM(
BAMFiles=c("W:/projects/lung_cancer/align/bowtie2/H5LNMCCXX_5_150505_FR07886866_Human__R_150501_ALEDOB_FGS_M001.markdup.bam", "W:/projects/lung_cancer/align/bowtie2/H5LNMCCXX_6_150505_FR07886867_Human__R_150501_ALEDOB_FGS_M001.markdup.bam"),
sampleNames=c("H5LNMCCXX_5", "H5LNMCCXX_6"),
mode="paired",
parallel=3)
head(bamCounts)
resCNMOPS <- cn.mops(bamCounts)
intCNMOPS <- calcIntegerCopyNumbers(resCNMOPS)
segplot(intCNMOPS)
segplot(resCNMOPS)
z <- gridss/0.9.0/subgraph
z <- "gridss/0.9.0/subgraph"
library(stringr)
str_detect(z, "[/].*[/]")
z <- c("gridss/0.9.0/subgraph", "gridss/0.9.0")
str_detect(z, "[/].*[/]")
str_detect(z, "gridss[/].*[/]")
ggplot()
library(ggplot2)
ggplot()
last_plot()
?last_plot
data.frame(x=c(1,2), y=c(2,3))
z <- data.frame(x=c(1,2), y=c(2,3))
ggplot(z) + aes(x=x) + geom_histogram()
last_plot()
ggplot()
last_plot()
ggplot()
ggsave("C:/temp/out.jpg")
ggsave("C:/temp/out.png")
ggsave("C:/temp/out.eps")
ggplot()
plot()
ggplot()
par()
sys.frame(1)
?print
dt <- read.csv("c:/temp/asm.csv")
library(ggplot2)
View(dt)
ggplot(dt) + aes(x=dt$V3)
dt <- read.csv("c:/temp/asm.csv", header=FALSE)
View(dt)
ggplot(dt) + aes(x=dt$V3)
ggplot(dt) + aes(x=dt$V3) + geom_histogram()
setwd("W:/dev/motif")
getwd()
source("https://bioconductor.org/biocLite.R")
biocLite("Biostrings")
biocLite("BSgenome.Hsapiens.UCSC.hg19")
biocLite(c("GenomicAlignments", "rtracklayer")
)
head(gr)
install.packages("shiny")
runExample("01_hello")
library(shiny)
runExample("01_hello")
?UseMethod
lineprof()
library(lineprof)
setwd("~/")
library(VariantAnnotation)
readVcF("W:/projects/sv_benchmark/ztmp.vcf")
readVcF("W:/projects/sv_benchmark/ztmp.vcf", "hg19")
readVcf("W:/projects/sv_benchmark/ztmp.vcf", "hg19")
zz <- readVcf("W:/projects/sv_benchmark/ztmp.vcf", "hg19")
geno(vcf)
geno(zz)
tail(geno(zz))
geno(zz)
?geno
vcf <- readVcf("W:/projects/sv_benchmark/data.rd/0a41206f9a9c29010b72589efd0f79ab/results/variants/diploid.vcf", "hg19")
vcf <- readVcf("W:/projects/sv_benchmark/data.rd/0a41206f9a9c29010b72589efd0f79ab/results/variants/diploidSV.vcf", "hg19")
geno(vcf)
vcf
geon(header(vcf))
geno(header(vcf))
geno(vcf)
vcf
colData(vcf)
geno(vcf)$GT
geno(zz)$GT
head(geno(zz)$GT)
setwd("W:/projects/sv_benchmark")
setwd("~/")
setwd("W:/projects/sv_benchmark")
